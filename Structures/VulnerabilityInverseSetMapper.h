#ifndef P3HASHMAP_VULNERABILITYINVERSESETMAPPER_H
#define P3HASHMAP_VULNERABILITYINVERSESETMAPPER_H

#include <unordered_map>
#include <map>
#include <string>
#include <unordered_set>
#include <vector>
#include "DataTable.h"

using namespace std;
class VulnerabilityInverseSetMapper
{
    //map of all CVE IDs with corresponding data table
    unordered_map<string, DataTable> cve_id_map;
    //holds multiple CVE IDs for each CVSS value in the tree
    map<float, vector<string>, greater<>> cvss_tree;
    //individual unordered map which stores an inverse set of CVE IDs corresponding to each unique date, vendor, ect.
    unordered_map<string, unordered_set<string>> date_index;
    unordered_map<string, unordered_set<string>> vendor_index;
    unordered_map<string, unordered_set<string>> product_index;
    unordered_map<string, unordered_set<string>> os_index;
    unordered_map<string, unordered_set<string>> severity_index;

public:
    void unordered_map_SQL_upload();
    void set_and_multimap_add_and_sort();
//    void map_print_all_cvss_ordered();
    void set_and_multimap_print_by_input(string date_search, string vendor_search, string product_search, string os_search, string sev_search);
};

#endif //P3HASHMAP_VULNERABILITYINVERSESETMAPPER_H
